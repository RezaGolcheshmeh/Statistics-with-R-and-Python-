[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Statistics with R and Python",
    "section": "",
    "text": "1 Introduction\nThis book is designed for psychology students to become familiar with statistical concepts in the R and Python programming languages.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Statistics with R and Python</span>"
    ]
  },
  {
    "objectID": "chapter1.html",
    "href": "chapter1.html",
    "title": "2  chapter1: Descriptive statistics",
    "section": "",
    "text": "2.1 Measures of central tendency\nIn this chapter we will learn descriptive statistics.\nMeasures of Central Tendency are statistical values that represent the center or typical value of a data set. They help us understand the overall trend or “average” behavior of the data.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>chapter1: Descriptive statistics</span>"
    ]
  },
  {
    "objectID": "chapter2.html",
    "href": "chapter2.html",
    "title": "3  chapter2: Drawing graphs",
    "section": "",
    "text": "Drawing graphs",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>chapter2: Drawing graphs</span>"
    ]
  },
  {
    "objectID": "chapter1.html#measures-of-central-tendency",
    "href": "chapter1.html#measures-of-central-tendency",
    "title": "2  chapter1: Descriptive statistics",
    "section": "",
    "text": "2.1.1 Mode in R\nThe mode is the value(s) that appear most frequently in the data set.\nIn R, the lsr package provides a simple and clean way to calculate the mode.\nStep 1: Install and Load the lsr Package\n\ninstall.packages(\"lsr\")\n\nInstalling package into '/cloud/lib/x86_64-pc-linux-gnu-library/4.5'\n(as 'lib' is unspecified)\n\nlibrary(lsr)\n\nExample:\n\ndata &lt;- c(1, 2, 2, 3, 3, 3, 4, 5)\nmodeOf(data)\n\n[1] 3\n\n\n⚠️ Important Note\nThere is a base R function also named mode() — but it returns the data type (like \"numeric\", \"character\") instead of calculating the statistical mode!\nExample: Mode in Data Frame\n\ndf &lt;- data.frame(\n  Score = c(1, 2, 2, 3, 4, 3, NA),\n  Group = c(\"A\", \"B\", \"B\", \"B\", \"A\", \"A\", NA),\n  Age   = c(20, 22, 21, 22, 21, 22, 21)\n)\n\nsapply(df, modeOf)\n\n     Score Group Age \n[1,] \"2\"   \"A\"   \"22\"\n[2,] \"3\"   \"B\"   \"21\"\n\n\nThe sapply() function is executed on each column of the dataframe.\n\n\n2.1.2 Mode in Python\nCalculating the Mode in Python Using pandas\nUse .mode() to Find the Mode\nExaple 1:\n\nimport pandas as pd\n\ndata = pd.Series([1, 2, 2, 3, 4, 4, 5])\nmod = data.mode()\nprint(\"Mode:\", mod.tolist())\n\nMode: [2, 4]\n\n#or\n\nprint (mod)\n\n0    2\n1    4\ndtype: int64\n\n\nExample 2: Create a Sample Data Frame.\nMode for All Columns:\n\ndata = {\n    'A': [1, 2, 2, 3, 4],\n    'B': [5, 5, 6, 7, 7],\n    'C': [10, 10, 10, 11, 12]\n}\n\ndf = pd.DataFrame(data)\n\nmode_values = df.mode()\nprint(mode_values)\n\n     A  B     C\n0  2.0  5  10.0\n1  NaN  7   NaN\n\n\nExample 3:\nMode for All Columns:\n\ndata = {\n    \"Name\": [\"Alice\", \"Bob\", \"Charlie\", \"Diana\", \"Eli\", \"Fiona\"],\n    \"Age\": [24, 30, 22, 24, 30, 24],\n    \"Gender\": [\"Female\", \"Male\", \"Male\", \"Female\", \"Male\", \"Female\"]\n}\n\ndf = pd.DataFrame(data)\ndf\n\n      Name  Age  Gender\n0    Alice   24  Female\n1      Bob   30    Male\n2  Charlie   22    Male\n3    Diana   24  Female\n4      Eli   30    Male\n5    Fiona   24  Female\n\n\nMode of the \"Age\" column:\n\ndf[\"Age\"].mode()\n\n0    24\nName: Age, dtype: int64",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>chapter1: Descriptive statistics</span>"
    ]
  }
]